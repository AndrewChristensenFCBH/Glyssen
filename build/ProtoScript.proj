<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<RootDir>$(teamcity_build_checkoutDir)</RootDir>
		<Solution>ProtoScript.sln</Solution>
		<ApplicationName>Protoscript Generator</ApplicationName>
		<Configuration>Release</Configuration>
	</PropertyGroup>

	<UsingTask TaskName="StampAssemblies" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll" />
	<UsingTask TaskName="MakeWixForDirTree" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll" />
	<UsingTask TaskName="Split" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll" />
	<UsingTask TaskName="FileUpdate" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll" />
	<UsingTask TaskName="NUnitTeamCity" AssemblyFile="$(teamcity_dotnet_nunitlauncher_msbuild_task)" Condition="'$(OS)'=='Windows_NT'"/>
	<Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets" Condition="'$(OS)'=='Windows_NT'"/>
	<UsingTask AssemblyFile="C:\Program Files (x86)\MSBuild\MSBuildCommunityTasks\MSBuild.Community.Tasks.dll"
		TaskName="MsBuild.Community.Tasks.WebDownload" Condition="'$(OS)'=='Windows_NT'"/>

	<Target Name="VersionNumbers">
	<Message Text="BUILD_NUMBER: $(BUILD_NUMBER)" Importance="high"/>

	<Split Input="$(BUILD_NUMBER)" Delimiter="." OutputSubString="2">
		<Output TaskParameter="ReturnValue" PropertyName="BuildCounter" />
	</Split>
	<Split Input="$(BUILD_NUMBER)" Delimiter="." OutputSubString="3">
		<Output TaskParameter="ReturnValue" PropertyName="BuildHash" />
	</Split>

	<Message Text="BuildCounter: $(BuildCounter)" Importance="high"/>
	<Message Text="BuildHash: $(BuildHash)" Importance="high"/>

	<!-- For now, mimicking Bloom's strategy of updating the version number here (not on TeamCity, not in the assemblies). -->
	<CreateProperty Value="0.1.$(BuildCounter)">
		<Output PropertyName="Version" TaskParameter="Value"/>
	</CreateProperty>
	<CreateProperty Value="$(Version).$(BuildHash)">
		<Output PropertyName="FullVersion" TaskParameter="Value"/>
	</CreateProperty>
	<CreateProperty Value="ProtoscriptGeneratorInstaller.$(Version).msi" Condition=" '$(Label)' == '' ">
		<Output PropertyName="InstallerFileName" TaskParameter="Value"/>
	</CreateProperty>
	<CreateProperty Value="ProtoscriptGeneratorInstaller.$(Version).$(Label).msi" Condition=" '$(Label)' != '' ">
		<Output PropertyName="InstallerFileName" TaskParameter="Value"/>
	</CreateProperty>
	<Message Text="Version: $(Version)" Importance="high"/>
	<Message Text="FullVersion: $(FullVersion)" Importance="high"/>
	</Target>

	<Target Name="SetAssemblyVersion" DependsOnTargets="VersionNumbers">
	<ItemGroup>
		<AssemblyInfoFiles Include="$(RootDir)/**/AssemblyInfo.cs"/>
	</ItemGroup>
	<StampAssemblies Version="$(Version)" InputAssemblyPaths="@(AssemblyInfoFiles)" />
	</Target>

	<Target Name="Build" DependsOnTargets="SetAssemblyVersion">

	<MSBuild Projects="$(RootDir)/$(Solution)"
			 Targets="Rebuild"
			 Properties="Configuration=$(Configuration)" />
	</Target>

	<Target Name="Test" DependsOnTargets="Build">
		<CreateItem Include="$(RootDir)/output/$(Configuration)/*Tests.dll">
			<Output ItemName="TestAssemblies" TaskParameter="Include" />
		</CreateItem>
		<NUnitTeamCity
			Assemblies="@(TestAssemblies)"
			ExcludeCategory="SkipOnTeamCity"
			NUnitVersion="NUnit-2.5.5" />
	</Target>

	<Target Name="Installer" DependsOnTargets="VersionNumbers; MakeWixForDistFiles; MakeWixForXulRunner; Build ">

		<!-- set the version number in the installer configuration program.	Perhaps there's a way to just send in the variables rather than this brute-force
			changing of the script, but I haven't figured that out. -->

		<FileUpdate File="$(RootDir)\Installer\Installer.wxs" Regex='Property_ProductVersion = ".*"'
			ReplacementText ="Property_ProductVersion = &quot;$(Version)&quot;" />

		<Message Text="Making Installer Version: $(Version)" Importance="high" />

		<MSBuild Projects="$(RootDir)\Installer\Installer.wixproj"/>

		<!-- remove an existing one with the same name, if necessary -->
		<Delete Files="$(RootDir)\output\installer\$(InstallerFileName)" TreatErrorsAsWarnings="false" />

		<Copy SourceFiles="$(RootDir)\output\installer\ProtoscriptGeneratorInstaller.msi"
			DestinationFiles="$(RootDir)\output\installer\$(InstallerFileName)"
		/>
		<Message Text="Copied installer to $(RootDir)\output\installer\$(InstallerFileName)" Importance="high"/>

		<!-- remove the installer which has no version number (wouldn't need this if the copy above was a move, instead) -->
		<Delete Files="$(RootDir)\output\installer\ProtoscriptGeneratorInstaller.msi" TreatErrorsAsWarnings="false" />

	</Target>

	<!-- These targets are designed to be additional steps on TeamCity after running target Installer. Pick the appropriate one
	depending on whether your project's output MUST be signed or it's only nice if it is. For example, a continuous build
	might use SignIfPossible, while a Publication build must use SignInstaller.-->
	<Target Name="SignInstaller" DependsOnTargets="VersionNumbers; Installer">
		<Exec Command='sign "$(RootDir)\output\installer\$(InstallerFileName)"'></Exec>
		<Message Text="Signed installer at $(RootDir)\output\installer\$(InstallerFileName)" Importance="high"/>
	</Target>

	<Target Name="SignIfPossible" DependsOnTargets="VersionNumbers">
		<Exec Command='sign "$(RootDir)\output\installer\$(InstallerFileName)"' ContinueOnError="true"></Exec>
	</Target>
	
	<Target Name="MakeWixForDistFiles">
		<MakeDir Directories ="$(RootDir)\output\installer" ContinueOnError ="true"/>
		<MakeWixForDirTree
			DirectoryReferenceId="ProgramDir"
			ComponentGroupId="DistFiles"
			RootDirectory="$(RootDir)\DistFiles"
			InstallerSourceDirectory="$(RootDir)\Installer"
			OutputFilePath="$(RootDir)\output\installer\GeneratedDistFiles.wxs"
			MatchRegExPattern=".*"
			>
			<Output TaskParameter="OutputFilePath" ItemName="Compile" />
		</MakeWixForDirTree>
	</Target>
	
	<Target Name="MakeWixForXulRunner">
		<MakeDir Directories ="$(RootDir)\output\installer" ContinueOnError ="true"/>
		<MakeWixForDirTree
			DirectoryReferenceId="XulRunnerDir"
			ComponentGroupId="XulRunner"
			RootDirectory="$(RootDir)\lib\xulrunner"
			InstallerSourceDirectory="$(RootDir)\Installer"
			OutputFilePath="$(RootDir)\output\installer\GeneratedXulRunner.wxs"
			MatchRegExPattern=".*"
			>
			<Output TaskParameter="OutputFilePath" ItemName="Compile" />
		</MakeWixForDirTree>
	</Target>
</Project>
